<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>搭建Hexo博客并部署到github</title>
    <link href="/2021/03/24/blog-202103241359/"/>
    <url>/2021/03/24/blog-202103241359/</url>
    
    <content type="html"><![CDATA[<h2 id="1-安装Node-js、git"><a href="#1-安装Node-js、git" class="headerlink" title="1. 安装Node.js、git"></a>1. 安装Node.js、git</h2><p><a href="https://nodejs.org/">Node.js下载地址</a></p><p><a href="https://git-scm.com/downloads">git下载地址</a></p><h2 id="2-本地git连接github账号"><a href="#2-本地git连接github账号" class="headerlink" title="2. 本地git连接github账号"></a>2. 本地git连接github账号</h2><p><a href="../blog-202103241354">本地git工具绑定github账号</a></p><h2 id="3-安装并创建Hexo博客"><a href="#3-安装并创建Hexo博客" class="headerlink" title="3. 安装并创建Hexo博客"></a>3. 安装并创建Hexo博客</h2><p>创建一个blog文件夹用来存放整个项目的文件</p><p>右键选择<code>Git Bash Here</code></p><p><img src="blog-202103241359/image-20210323161758323.png" alt="打开Git Bash"></p><p>安装cnpm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="4-cnpm长时间未响应的解决方法：-正常则跳过"><a href="#4-cnpm长时间未响应的解决方法：-正常则跳过" class="headerlink" title="4. cnpm长时间未响应的解决方法：(正常则跳过)"></a>4. cnpm长时间未响应的解决方法：(正常则跳过)</h2><blockquote><h3 id="1-先卸载cnpm"><a href="#1-先卸载cnpm" class="headerlink" title="1. 先卸载cnpm"></a>1. 先卸载cnpm</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h3 id="2-注册模块镜像"><a href="#2-注册模块镜像" class="headerlink" title="2. 注册模块镜像"></a>2. 注册模块镜像</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm set registry https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h3 id="3-node-gyp-编译依赖的-node-源码镜像"><a href="#3-node-gyp-编译依赖的-node-源码镜像" class="headerlink" title="3. node-gyp 编译依赖的 node 源码镜像"></a>3. node-gyp 编译依赖的 node 源码镜像</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm set disturl https:&#x2F;&#x2F;npm.taobao.org&#x2F;dist</span><br></pre></td></tr></table></figure><h3 id="4-清空缓存"><a href="#4-清空缓存" class="headerlink" title="4. 清空缓存"></a>4. 清空缓存</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm cache clean --force</span><br></pre></td></tr></table></figure><h3 id="5-安装cnpm"><a href="#5-安装cnpm" class="headerlink" title="5. 安装cnpm"></a>5. 安装cnpm</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure></blockquote><p>安装hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo_cli</span><br></pre></td></tr></table></figure><p>hexo初始化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p><img src="blog-202103241359/image-20210323163059194.png" alt="初始化成功提示"></p><p>初始化完成后会生成的文件(其实就是从github仓库clone项目)</p><p><img src="blog-202103241359/image-20210323163203070.png" alt="Hexo文件"></p><h2 id="5-本地运行博客服务器"><a href="#5-本地运行博客服务器" class="headerlink" title="5. 本地运行博客服务器"></a>5. 本地运行博客服务器</h2><p>输入以下命令后博客默认在本地4000端口运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g #生成网页文件   g &#x3D; generate</span><br><span class="line">hexo s #启动服务器   s &#x3D; server</span><br></pre></td></tr></table></figure><p><img src="blog-202103241359/image-20210323163534059.png" alt="本地博客"></p><h2 id="6-创建github仓库"><a href="#6-创建github仓库" class="headerlink" title="6. 创建github仓库"></a>6. 创建github仓库</h2><p>创建一个仓库名为 <code>&#123;你的github用户名&#125;.github.io</code> 的仓库</p><p><img src="blog-202103241359/image-20210323164050038.png" alt="格式必须正确，否则将无法访问"></p><p>复制仓库地址</p><p><img src="blog-202103241359/image-20210323164131307.png" alt="仓库地址"></p><h2 id="7-修改站点配置"><a href="#7-修改站点配置" class="headerlink" title="7. 修改站点配置"></a>7. 修改站点配置</h2><p>找到blog目录下的 <code>_config.yml</code> 文件，拉到最下面修改并保存，repo里填复制过来的仓库地址</p><p><img src="blog-202103241359/image-20210323164306247.png" alt="修改前"></p><p><img src="blog-202103241359/image-20210323164349232.png" alt="修改后"></p><h2 id="8-安装git插件并部署博客"><a href="#8-安装git插件并部署博客" class="headerlink" title="8. 安装git插件并部署博客"></a>8. 安装git插件并部署博客</h2><p>安装hexo-deployer-git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><img src="blog-202103241359/image-20210323164737613.png" alt="安装git插件"></p><p>部署博客到github</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</span><br><span class="line">hexo g</span><br><span class="line">hexo d #部署   d &#x3D; deploy</span><br></pre></td></tr></table></figure><p>跳出登录提示则登录github账号</p><p><img src="blog-202103241359/image-20210323165011216.png" alt="登录github"></p><p>刷新仓库发现网页已经部署成功</p><p><img src="blog-202103241359/image-20210323165113526.png" alt="github仓库文件"></p><p>博客已可以访问</p><p><img src="blog-202103241359/image-20210323165147804.png" alt="部署在github上的博客"></p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>github</tag>
      
      <tag>hexo</tag>
      
      <tag>node.js</tag>
      
      <tag>博客</tag>
      
      <tag>搭建</tag>
      
      <tag>部署</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用git把本地项目提交到github、拉取项目、更新github项目</title>
    <link href="/2021/03/24/blog-202103241358/"/>
    <url>/2021/03/24/blog-202103241358/</url>
    
    <content type="html"><![CDATA[<h2 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1. 安装git"></a>1. 安装git</h2><p><a href="https://git-scm.com/downloads">git下载地址</a></p><h2 id="2-本地git连接github账号"><a href="#2-本地git连接github账号" class="headerlink" title="2. 本地git连接github账号"></a>2. 本地git连接github账号</h2><p><a href="../blog-202103241354">本地git工具绑定github账号</a></p><h2 id="3-创建github仓库"><a href="#3-创建github仓库" class="headerlink" title="3. 创建github仓库"></a>3. 创建github仓库</h2><p>创建仓库并<strong>复制</strong>仓库地址</p><p><img src="image-20210323183225770.png" alt="仓库名自取"></p><p><img src="image-20210323183327182.png" alt="创建完成"></p><h2 id="4-本地项目初始化并连接仓库"><a href="#4-本地项目初始化并连接仓库" class="headerlink" title="4. 本地项目初始化并连接仓库"></a>4. 本地项目初始化并连接仓库</h2><p>打开项目文件右键选择 <code>Git Bash Here</code></p><p><img src="image-20210323183608476.png" alt="启动Git Bash"></p><p>初始化git，把这个文件夹变成Git可管理的仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>把本地项目的<strong>origin</strong>分支与github仓库进行关联</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin &#123;复制过来的仓库地址&#125;</span><br></pre></td></tr></table></figure><p><img src="image-20210323183939139.png" alt="没反应就是成功"></p><h2 id="5-把项目上传到github"><a href="#5-把项目上传到github" class="headerlink" title="5. 把项目上传到github"></a>5. 把项目上传到github</h2><p>查看文件状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><p><img src="image-20210323184056345.png" alt="红色为未添加到缓存区的文件"></p><p>把工作区的文件添加到暂存区</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add . #.代表所有更改过的文件</span><br></pre></td></tr></table></figure><p><img src="image-20210323184307519.png" alt="没反应就是成功"></p><p>把暂存区的文件提交到本地仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &#39;first commit&#39; #&#39;&#39;里写注释</span><br></pre></td></tr></table></figure><p><img src="image-20210323211604212.png" alt="commit提示"></p><p>把本地仓库的<strong>origin</strong>分支文件push到github仓库的<strong>master</strong>分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master #第一次提交由于远程仓库为空所以带-u，以后就不带</span><br></pre></td></tr></table></figure><p><img src="image-20210323211758767.png" alt="push提示"></p><p>提交完成</p><p><img src="image-20210323211835750.png" alt="github仓库"></p><h2 id="6-拉取项目到本地"><a href="#6-拉取项目到本地" class="headerlink" title="6. 拉取项目到本地"></a>6. 拉取项目到本地</h2><p>在要拉取项目的文件夹右键选择 <code>Git Bash Here</code></p><p><img src="image-20210323212417194.png" alt="启动Git Bash"></p><p>拉取项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &#123;项目仓库地址&#125;</span><br></pre></td></tr></table></figure><p><img src="image-20210323212555390.png" alt="clone提示"></p><p><img src="image-20210323212637144.png" alt="拉取过来的项目文件夹"></p><h2 id="7-更新项目"><a href="#7-更新项目" class="headerlink" title="7. 更新项目"></a>7. 更新项目</h2><p>检查文件并添加到暂存区</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><p><img src="image-20210323213252624.png" alt="有红色则表示有文件更改"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git status</span><br></pre></td></tr></table></figure><p><img src="image-20210323213226344.png" alt="都是绿色则表示添加成功"></p><p>更新项目到github</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &#39;update&#39;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p><img src="image-20210323213614480.png" alt="push提示"></p>]]></content>
    
    
    <categories>
      
      <category>git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>github</tag>
      
      <tag>项目</tag>
      
      <tag>克隆</tag>
      
      <tag>更新</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>本地git工具绑定github账号</title>
    <link href="/2021/03/24/blog-202103241354/"/>
    <url>/2021/03/24/blog-202103241354/</url>
    
    <content type="html"><![CDATA[<h2 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1. 安装git"></a>1. 安装git</h2><p><a href="https://git-scm.com/downloads">git下载地址</a></p><h2 id="2-设置github账号"><a href="#2-设置github账号" class="headerlink" title="2. 设置github账号"></a>2. 设置github账号</h2><p>安装完成后桌面或任何位置右键选择 <code>Git Bash Here</code></p><p><img src="image-20210323151756733.png" alt="右键显示"></p><p>输入以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure><p><img src="image-20210323153112909.png" alt="没反应就是成功"></p><h2 id="3-生成ssh文件"><a href="#3-生成ssh文件" class="headerlink" title="3. 生成ssh文件"></a>3. 生成ssh文件</h2><p>输入以下命令(输入后三个选项都直接回车即可)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure><p>图为公钥存储位置</p><p><img src="image-20210323154538629.png" alt="ssh文件存储路径"></p><p>复制<code>id_rsa.pub</code>文件的内容</p><h2 id="4-给github账号添加公钥"><a href="#4-给github账号添加公钥" class="headerlink" title="4. 给github账号添加公钥"></a>4. 给github账号添加公钥</h2><p>进入 <a href="https://github.com/settings/keys">github → Settings → SSH and GPG keys</a> 点击 <code>New SSH key</code></p><p><img src="image-20210323155104481.png" alt="添加公钥"></p><p>Title随意，Key填复制过来的公钥</p><h2 id="5-连接完成"><a href="#5-连接完成" class="headerlink" title="5. 连接完成"></a>5. 连接完成</h2><p>添加后在<code>git bash</code>里输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh git@github.com</span><br></pre></td></tr></table></figure><p>若成功则显示</p><p><img src="image-20210323155730994.png"></p>]]></content>
    
    
    <categories>
      
      <category>git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>github</tag>
      
      <tag>连接</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
